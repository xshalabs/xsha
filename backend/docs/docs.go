// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/admin/avatar/preview/{uuid}": {
            "get": {
                "description": "Preview avatar image by UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "image/*"
                ],
                "tags": [
                    "Admin Avatar"
                ],
                "summary": "Preview avatar",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Avatar UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Avatar image for preview",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Invalid UUID",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Avatar not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/avatar/upload": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Upload an avatar image for administrator",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Avatar"
                ],
                "summary": "Upload avatar",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Avatar image to upload",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Avatar uploaded successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object"
                                },
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication failed",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "File too large",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/avatar/{uuid}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update administrator's avatar by avatar UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Management"
                ],
                "summary": "Update admin avatar",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Avatar UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Admin ID information",
                        "name": "adminData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "admin_id": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Avatar updated successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Admin or avatar not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/login-logs": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get system login log records, supporting filtering by username, IP, success status, date range and pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Get login logs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username filter",
                        "name": "username",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "IP address filter",
                        "name": "ip",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Success status filter",
                        "name": "success",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Start time filter (YYYY-MM-DD)",
                        "name": "start_time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End time filter (YYYY-MM-DD)",
                        "name": "end_time",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number, defaults to 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size, defaults to 20, maximum 100",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login log list",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "logs": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                },
                                "page": {
                                    "type": "number"
                                },
                                "page_size": {
                                    "type": "number"
                                },
                                "total": {
                                    "type": "number"
                                },
                                "total_pages": {
                                    "type": "number"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to get login logs",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/operation-logs": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get administrator operation log list with multi-condition filtering and pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Logs"
                ],
                "summary": "Get operation log list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username filter",
                        "name": "username",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Resource type filter",
                        "name": "resource",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Operation type filter",
                        "name": "operation",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Operation success status filter",
                        "name": "success",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Start time filter (YYYY-MM-DD)",
                        "name": "start_time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End time filter (YYYY-MM-DD)",
                        "name": "end_time",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number, default is 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size, default is 20, maximum is 100",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation log list",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "logs": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                },
                                "page": {
                                    "type": "number"
                                },
                                "page_size": {
                                    "type": "number"
                                },
                                "total": {
                                    "type": "number"
                                },
                                "total_pages": {
                                    "type": "number"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to get operation logs",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/operation-logs/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get detailed information of a single operation log by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Logs"
                ],
                "summary": "Get operation log details",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Log ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation log details",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "log": {
                                    "type": "object"
                                },
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid log ID",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Log not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/operation-stats": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get operation statistics information within a specified time range",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Logs"
                ],
                "summary": "Get operation statistics",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username filter",
                        "name": "username",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Start time (YYYY-MM-DD), default is 30 days ago",
                        "name": "start_time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End time (YYYY-MM-DD), default is today",
                        "name": "end_time",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation statistics information",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "end_time": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "operation_stats": {
                                    "type": "object"
                                },
                                "resource_stats": {
                                    "type": "object"
                                },
                                "start_time": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to get operation statistics",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/roles": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get list of available administrator roles",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Management"
                ],
                "summary": "Get available roles",
                "responses": {
                    "200": {
                        "description": "Available roles",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "roles": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/users": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "List all administrator users with pagination and filtering",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Management"
                ],
                "summary": "List admin users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username filter",
                        "name": "username",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Active status filter",
                        "name": "is_active",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number, defaults to 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size, defaults to 20, maximum 100",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Admin list",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "admins": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                },
                                "page": {
                                    "type": "number"
                                },
                                "page_size": {
                                    "type": "number"
                                },
                                "total": {
                                    "type": "number"
                                },
                                "total_pages": {
                                    "type": "number"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to get admin list",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new administrator user with optional role assignment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Management"
                ],
                "summary": "Create admin user",
                "parameters": [
                    {
                        "description": "Admin user information (role is optional, defaults to 'admin')",
                        "name": "adminData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "email": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "password": {
                                    "type": "string"
                                },
                                "role": {
                                    "type": "string"
                                },
                                "username": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Admin created successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "admin": {
                                    "type": "object"
                                },
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/users/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get administrator user by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Management"
                ],
                "summary": "Get admin user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Admin ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Admin information",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "admin": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Admin not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update administrator user information including role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Management"
                ],
                "summary": "Update admin user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Admin ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Admin update information (role: super_admin|admin|developer)",
                        "name": "adminData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "email": {
                                    "type": "string"
                                },
                                "is_active": {
                                    "type": "boolean"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "role": {
                                    "type": "string"
                                },
                                "username": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Admin updated successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Admin not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete administrator user (cannot delete the last admin)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Management"
                ],
                "summary": "Delete admin user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Admin ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Admin deleted successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Admin not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/users/{id}/password": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Change administrator user password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Management"
                ],
                "summary": "Change admin password",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Admin ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "New password",
                        "name": "passwordData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "new_password": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Password changed successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Admin not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/admins": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get list of all administrator users (requires authentication)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Management"
                ],
                "summary": "List admin users (authenticated)",
                "responses": {
                    "200": {
                        "description": "Admin list",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "admins": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to get admin list",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/attachments": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all attachments for a specific conversation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task Conversation Attachments"
                ],
                "summary": "Get conversation attachments",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Conversation ID",
                        "name": "conversation_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Attachments retrieved successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid conversation ID",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication failed",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/attachments/upload": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Upload an image or PDF file that will be associated with a conversation later",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task Conversation Attachments"
                ],
                "summary": "Upload attachment",
                "parameters": [
                    {
                        "type": "file",
                        "description": "File to upload",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Attachment uploaded successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object"
                                },
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication failed",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "File too large",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/attachments/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get attachment information by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task Conversation Attachments"
                ],
                "summary": "Get attachment info",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Attachment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Attachment retrieved successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object"
                                },
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid attachment ID",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication failed",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Attachment not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete an attachment by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task Conversation Attachments"
                ],
                "summary": "Delete attachment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Attachment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Attachment deleted successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid attachment ID",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication failed",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Attachment not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/attachments/{id}/download": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Download attachment file by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "Task Conversation Attachments"
                ],
                "summary": "Download attachment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Attachment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Attachment file",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Invalid attachment ID",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication failed",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Attachment not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/attachments/{id}/preview": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Preview attachment file (mainly for images)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "image/*"
                ],
                "tags": [
                    "Task Conversation Attachments"
                ],
                "summary": "Preview attachment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Attachment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Attachment file for preview",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Invalid attachment ID",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication failed",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Attachment not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "Login authentication using username and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "Login information",
                        "name": "loginData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "password": {
                                    "type": "string"
                                },
                                "username": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "expires_at": {
                                    "type": "string"
                                },
                                "token": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication failed",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too frequent requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Logout current user and add token to blacklist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "User logout",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid token",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication failed",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Logout failed",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/conversations": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get paginated list of conversations for a specific task",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task Conversations"
                ],
                "summary": "List task conversations",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Task ID",
                        "name": "task_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Conversations retrieved successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "conversations": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "page": {
                                            "type": "integer"
                                        },
                                        "page_size": {
                                            "type": "integer"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication failed",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new conversation for a specific task",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task Conversations"
                ],
                "summary": "Create task conversation",
                "parameters": [
                    {
                        "description": "Conversation information",
                        "name": "conversation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateConversationRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Conversation created successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object"
                                },
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication failed",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/conversations/latest": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get the most recent conversation for a specific task",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task Conversations"
                ],
                "summary": "Get latest task conversation",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Task ID",
                        "name": "task_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Latest conversation retrieved successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object"
                                },
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication failed",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Conversation not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/conversations/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a conversation by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task Conversations"
                ],
                "summary": "Get task conversation",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Conversation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Conversation retrieved successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object"
                                },
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid conversation ID",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication failed",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Conversation not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update a conversation's content",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task Conversations"
                ],
                "summary": "Update task conversation",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Conversation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Conversation update information",
                        "name": "conversation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateConversationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Conversation updated successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication failed",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a conversation by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task Conversations"
                ],
                "summary": "Delete task conversation",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Conversation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Conversation deleted successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid conversation ID",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication failed",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Conversation not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/conversations/{id}/details": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a conversation with its associated result information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task Conversations"
                ],
                "summary": "Get conversation details",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Conversation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Conversation details retrieved successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object"
                                },
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid conversation ID",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication failed",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Conversation not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/conversations/{id}/execution-log": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get detailed execution log of AI task by conversation ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task Execution Log"
                ],
                "summary": "Get task conversation execution log",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Conversation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/database.TaskExecutionLog"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/conversations/{id}/execution/cancel": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Cancel AI task that is executing or pending",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task Execution Log"
                ],
                "summary": "Cancel task execution",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Conversation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/conversations/{id}/execution/retry": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retry failed or cancelled AI task",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task Execution Log"
                ],
                "summary": "Retry task execution",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Conversation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/conversations/{id}/git-diff": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Git diff information for a specific conversation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task Conversations"
                ],
                "summary": "Get conversation Git diff",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Conversation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Include file content in diff",
                        "name": "include_content",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Git diff retrieved successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid conversation ID",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication failed",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to get Git diff",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/conversations/{id}/git-diff/file": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Git diff for a specific file in a conversation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task Conversations"
                ],
                "summary": "Get conversation file Git diff",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Conversation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "File path",
                        "name": "file_path",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File Git diff retrieved successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "diff_content": {
                                            "type": "string"
                                        },
                                        "file_path": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication failed",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to get file Git diff",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/conversations/{id}/logs/stream": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get real-time or historical execution logs for a specific conversation via Server-Sent Events (SSE)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/event-stream"
                ],
                "tags": [
                    "Task Conversations"
                ],
                "summary": "Stream conversation execution logs",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Conversation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Real-time log stream",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid conversation ID",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication failed",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Conversation not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to stream logs",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/credentials": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get the current user's Git credential list, supporting filtering by name, type and pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Git Credentials"
                ],
                "summary": "Get Git credential list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Credential name filter",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Credential type filter (password/token/ssh_key)",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number, defaults to 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size, defaults to 20, maximum 100",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Credential list",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "credentials": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                },
                                "page": {
                                    "type": "number"
                                },
                                "page_size": {
                                    "type": "number"
                                },
                                "total": {
                                    "type": "number"
                                },
                                "total_pages": {
                                    "type": "number"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to get credential list",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new Git credential, supporting password, token, and SSH key types",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Git Credentials"
                ],
                "summary": "Create Git credential",
                "parameters": [
                    {
                        "description": "Credential information",
                        "name": "credential",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateCredentialRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Credential created successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "credential": {
                                    "type": "object"
                                },
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to create credential",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/credentials/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get detailed information of a specified Git credential by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Git Credentials"
                ],
                "summary": "Get Git credential details",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Credential ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Credential details",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "credential": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid credential ID",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Credential not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update information of a specified Git credential",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Git Credentials"
                ],
                "summary": "Update Git credential",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Credential ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Credential update information",
                        "name": "credential",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateCredentialRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Credential updated successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Credential not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a specified Git credential",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Git Credentials"
                ],
                "summary": "Delete Git credential",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Credential ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Credential deleted successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid credential ID",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Credential not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/credentials/{id}/admins": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all admins for a specific credential",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Git Credentials"
                ],
                "summary": "Get credential admins",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Credential ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Credential admins retrieved successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "admins": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid credential ID",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Credential not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Add an admin to a credential",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Git Credentials"
                ],
                "summary": "Add admin to credential",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Credential ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Admin information",
                        "name": "admin",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.AddCredentialAdminRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Admin added to credential successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Credential not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/credentials/{id}/admins/{admin_id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Remove an admin from a credential",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Git Credentials"
                ],
                "summary": "Remove admin from credential",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Credential ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Admin ID",
                        "name": "admin_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Admin removed from credential successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Credential not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/dashboard/recent-tasks": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get recent tasks for dashboard",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dashboard"
                ],
                "summary": "Get recent tasks",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of tasks to return",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Recent tasks",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "tasks": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/dashboard/stats": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get aggregated system statistics for dashboard. Only accessible by super administrators.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dashboard"
                ],
                "summary": "Get dashboard statistics",
                "responses": {
                    "200": {
                        "description": "Dashboard statistics",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "stats": {
                                    "type": "object",
                                    "additionalProperties": true
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Insufficient permissions",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/environments": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get current user's development environment list with pagination and filtering",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Development Environment"
                ],
                "summary": "Get environment list",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number, default is 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size, default is 10",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Environment name filter",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Docker image filter",
                        "name": "docker_image",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Environment list",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "environments": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    }
                                },
                                "total": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new development environment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Development Environment"
                ],
                "summary": "Create development environment",
                "parameters": [
                    {
                        "description": "Environment information",
                        "name": "environment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateEnvironmentRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Environment created successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "environment": {
                                    "type": "object"
                                },
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/environments/available-images": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get available environment images from system configuration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Development Environment"
                ],
                "summary": "Get available environment images",
                "responses": {
                    "200": {
                        "description": "Available environment images",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "images": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/environments/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get detailed information of a development environment by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Development Environment"
                ],
                "summary": "Get environment details",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Environment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Environment details",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "environment": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Environment not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update specified development environment information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Development Environment"
                ],
                "summary": "Update environment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Environment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Environment update information",
                        "name": "environment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateEnvironmentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Environment updated successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete specified development environment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Development Environment"
                ],
                "summary": "Delete environment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Environment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Environment deleted successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Delete failed",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/environments/{id}/admins": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all admins that have access to a specific environment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Development Environment"
                ],
                "summary": "Get environment admins",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Environment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Environment admins",
                        "schema": {
                            "$ref": "#/definitions/handlers.EnvironmentAdminsResponse"
                        }
                    },
                    "404": {
                        "description": "Environment not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Add an admin to the environment's admin list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Development Environment"
                ],
                "summary": "Add admin to environment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Environment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Admin information",
                        "name": "admin",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.AddAdminToEnvironmentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Admin added successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Environment not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/environments/{id}/admins/{admin_id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Remove an admin from the environment's admin list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Development Environment"
                ],
                "summary": "Remove admin from environment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Environment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Admin ID",
                        "name": "admin_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Admin removed successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Environment not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Check server status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "Server status is normal",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "lang": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "status": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/projects": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get current user's project list with pagination, filtering and sorting",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Get project list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project name filter (fuzzy matching)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Protocol type filter (https/ssh)",
                        "name": "protocol",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number, defaults to 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size, defaults to 20",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort field: name, task_count, created_at (defaults to created_at)",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort direction: asc, desc (defaults to desc)",
                        "name": "sort_direction",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Project list",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "page": {
                                    "type": "number"
                                },
                                "page_size": {
                                    "type": "number"
                                },
                                "projects": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    }
                                },
                                "total": {
                                    "type": "number"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to get project list",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Create project",
                "parameters": [
                    {
                        "description": "Project information",
                        "name": "project",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateProjectRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Project created successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "number"
                                },
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Project creation failed",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/projects/branches": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Fetch Git repository branch list using provided credentials and verify access permissions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Fetch Git repository branch list",
                "parameters": [
                    {
                        "description": "Repository information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.FetchRepositoryBranchesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetch branch list successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                },
                                "result": {
                                    "$ref": "#/definitions/handlers.FetchRepositoryBranchesResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to fetch branch list",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/projects/credentials": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Git credential list compatible with protocol type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Get compatible credentials",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Protocol type (https/ssh)",
                        "name": "protocol",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get credential list successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "credentials": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/projects/parse-url": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Parse repository URL automatically detect protocol type and parse URL information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Parse repository URL",
                "parameters": [
                    {
                        "description": "Repository URL",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.ParseRepositoryURLRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Parse successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                },
                                "result": {
                                    "$ref": "#/definitions/handlers.ParseRepositoryURLResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/projects/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get project detailed information by project ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Get project details",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Project details",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "project": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid project ID",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Project not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update specified project information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Update project",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Project update information",
                        "name": "project",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateProjectRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Project updated successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Project not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete specified project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Delete project",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Project deleted successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid project ID",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Project not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/projects/{id}/kanban": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get tasks grouped by status for a specific project to display in kanban view",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "Get kanban tasks",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Kanban tasks retrieved successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/handlers.GetKanbanTasksResponse"
                                },
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid project ID",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication failed",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Project not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/settings": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all system configurations without pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System Configuration"
                ],
                "summary": "Get all configurations",
                "responses": {
                    "200": {
                        "description": "All configurations",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "configs": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update multiple system configurations in a single request",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System Configuration"
                ],
                "summary": "Batch update configurations",
                "parameters": [
                    {
                        "description": "Configuration updates",
                        "name": "configs",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.BatchUpdateConfigsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Configurations updated successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tasks": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a paginated list of tasks with optional filtering by project, status, title, branch, and dev environment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "List tasks",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Number of items per page (default: 20)",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by project ID",
                        "name": "project_id",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "todo",
                            "in_progress",
                            "done",
                            "cancelled"
                        ],
                        "type": "string",
                        "description": "Filter by task status (comma-separated for multiple)",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by task title (partial match)",
                        "name": "title",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by branch name",
                        "name": "branch",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by development environment ID",
                        "name": "dev_environment_id",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "start_branch",
                            "created_at",
                            "updated_at",
                            "status",
                            "conversation_count",
                            "dev_environment_name"
                        ],
                        "type": "string",
                        "description": "Sort by field",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "description": "Sort direction",
                        "name": "sort_direction",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tasks retrieved successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "page": {
                                            "type": "integer"
                                        },
                                        "page_size": {
                                            "type": "integer"
                                        },
                                        "tasks": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/database.Task"
                                            }
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication failed",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new task with optional requirement description and branch fetching",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "Create task",
                "parameters": [
                    {
                        "description": "Task information",
                        "name": "task",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateTaskRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Task created successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/handlers.CreateTaskResponse"
                                },
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication failed",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tasks/batch/status": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update the status of multiple tasks in a single request",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "Batch update task status",
                "parameters": [
                    {
                        "description": "Batch status update information",
                        "name": "batch",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.BatchUpdateTaskStatusRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Batch update completed",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/handlers.BatchUpdateTaskStatusResponse"
                                },
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication failed",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tasks/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a task by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "Get task",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task retrieved successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "#/definitions/database.Task"
                                },
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid task ID",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication failed",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update task information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "Update task",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Task update information",
                        "name": "task",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateTaskRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task updated successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication failed",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a specific task",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "Delete task",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task deleted successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid task ID",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication failed",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tasks/{id}/git-diff": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get the git diff between start branch and work branch for a task",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "Get task git diff",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Include file content in diff",
                        "name": "include_content",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Git diff retrieved successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid task ID or missing workspace",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication failed",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "No permission to access task",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to get git diff",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tasks/{id}/git-diff/file": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get the git diff for a specific file between start branch and work branch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "Get task git diff file",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "File path to get diff for",
                        "name": "file_path",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File diff retrieved successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "diff_content": {
                                            "type": "string"
                                        },
                                        "file_path": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid task ID or missing file path",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication failed",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "No permission to access task",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to get file diff",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tasks/{id}/push": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Push the task's work branch to the remote repository",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "Push task branch",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Push options",
                        "name": "request",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "force_push": {
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Branch pushed successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "output": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid task ID",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication failed",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to push branch",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "details": {
                                    "type": "string"
                                },
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tasks/{id}/status": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update the status of a specific task",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "Update task status",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Task status update information",
                        "name": "status",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateTaskStatusRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task status updated successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication failed",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/change-password": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Allow authenticated user to change their own password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Change own password",
                "parameters": [
                    {
                        "description": "Password change data",
                        "name": "passwordData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "current_password": {
                                    "type": "string"
                                },
                                "new_password": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Password changed successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Current password incorrect",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to change password",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/current": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get information of current logged-in user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get current user information",
                "responses": {
                    "200": {
                        "description": "User information",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "avatar": {
                                    "type": "object"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "role": {
                                    "type": "string"
                                },
                                "username": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to get user information",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/update-avatar": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Allow authenticated user to update their own avatar",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update own avatar",
                "parameters": [
                    {
                        "description": "Avatar update data",
                        "name": "avatarData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "avatar_uuid": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Avatar updated successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Avatar not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "database.Admin": {
            "type": "object",
            "properties": {
                "avatar": {
                    "$ref": "#/definitions/database.AdminAvatar"
                },
                "avatar_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "last_login_at": {
                    "type": "string"
                },
                "last_login_ip": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/database.AdminRole"
                },
                "updated_at": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "database.AdminAvatar": {
            "type": "object",
            "properties": {
                "admin": {
                    "$ref": "#/definitions/database.Admin"
                },
                "admin_id": {
                    "type": "integer"
                },
                "content_type": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "file_name": {
                    "type": "string"
                },
                "file_path": {
                    "type": "string"
                },
                "file_size": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "original_name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "database.AdminAvatarMinimal": {
            "type": "object",
            "properties": {
                "original_name": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "database.AdminListResponse": {
            "type": "object",
            "properties": {
                "avatar": {
                    "$ref": "#/definitions/database.AdminAvatarMinimal"
                },
                "avatar_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "last_login_at": {
                    "type": "string"
                },
                "last_login_ip": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/database.AdminRole"
                },
                "updated_at": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "database.AdminRole": {
            "type": "string",
            "enum": [
                "super_admin",
                "admin",
                "developer"
            ],
            "x-enum-varnames": [
                "AdminRoleSuperAdmin",
                "AdminRoleAdmin",
                "AdminRoleDeveloper"
            ]
        },
        "database.ConversationStatus": {
            "type": "string",
            "enum": [
                "pending",
                "running",
                "success",
                "failed",
                "cancelled"
            ],
            "x-enum-varnames": [
                "ConversationStatusPending",
                "ConversationStatusRunning",
                "ConversationStatusSuccess",
                "ConversationStatusFailed",
                "ConversationStatusCancelled"
            ]
        },
        "database.DevEnvironment": {
            "type": "object",
            "properties": {
                "admin": {
                    "$ref": "#/definitions/database.Admin"
                },
                "admin_id": {
                    "description": "Legacy single admin relationship (for backward compatibility)",
                    "type": "integer"
                },
                "admins": {
                    "description": "Many-to-many relationship for environment admins",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.Admin"
                    }
                },
                "cpu_limit": {
                    "type": "number"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "docker_image": {
                    "type": "string"
                },
                "env_vars": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "memory_limit": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "session_dir": {
                    "type": "string"
                },
                "system_prompt": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "database.GitCredential": {
            "type": "object",
            "properties": {
                "admin": {
                    "$ref": "#/definitions/database.Admin"
                },
                "admin_id": {
                    "description": "Legacy single admin relationship (for backward compatibility)",
                    "type": "integer"
                },
                "admins": {
                    "description": "Many-to-many relationship for credential admins",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.Admin"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "public_key": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/database.GitCredentialType"
                },
                "updated_at": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "database.GitCredentialType": {
            "type": "string",
            "enum": [
                "password",
                "token",
                "ssh_key"
            ],
            "x-enum-varnames": [
                "GitCredentialTypePassword",
                "GitCredentialTypeToken",
                "GitCredentialTypeSSHKey"
            ]
        },
        "database.GitProtocolType": {
            "type": "string",
            "enum": [
                "https",
                "ssh"
            ],
            "x-enum-varnames": [
                "GitProtocolHTTPS",
                "GitProtocolSSH"
            ]
        },
        "database.Project": {
            "type": "object",
            "properties": {
                "admin": {
                    "$ref": "#/definitions/database.Admin"
                },
                "admin_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "credential": {
                    "$ref": "#/definitions/database.GitCredential"
                },
                "credential_id": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "protocol": {
                    "$ref": "#/definitions/database.GitProtocolType"
                },
                "repo_url": {
                    "type": "string"
                },
                "system_prompt": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "database.Task": {
            "type": "object",
            "properties": {
                "admin": {
                    "$ref": "#/definitions/database.Admin"
                },
                "admin_id": {
                    "type": "integer"
                },
                "conversation_count": {
                    "type": "integer"
                },
                "conversations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.TaskConversation"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "dev_environment": {
                    "$ref": "#/definitions/database.DevEnvironment"
                },
                "dev_environment_id": {
                    "type": "integer"
                },
                "has_pull_request": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "latest_execution_time": {
                    "type": "string"
                },
                "project": {
                    "$ref": "#/definitions/database.Project"
                },
                "project_id": {
                    "type": "integer"
                },
                "session_id": {
                    "type": "string"
                },
                "start_branch": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/database.TaskStatus"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "work_branch": {
                    "type": "string"
                },
                "workspace_path": {
                    "type": "string"
                }
            }
        },
        "database.TaskConversation": {
            "type": "object",
            "properties": {
                "admin": {
                    "$ref": "#/definitions/database.Admin"
                },
                "admin_id": {
                    "type": "integer"
                },
                "commit_hash": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "env_params": {
                    "description": "EnvParams 环境参数，如model等参数的JSON存储",
                    "type": "string"
                },
                "execution_time": {
                    "description": "ExecutionTime 执行时间，如果为空则立即执行",
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "status": {
                    "$ref": "#/definitions/database.ConversationStatus"
                },
                "task": {
                    "$ref": "#/definitions/database.Task"
                },
                "task_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "database.TaskExecutionLog": {
            "type": "object",
            "properties": {
                "completed_at": {
                    "type": "string"
                },
                "conversation": {
                    "$ref": "#/definitions/database.TaskConversation"
                },
                "conversation_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "docker_command": {
                    "type": "string"
                },
                "error_message": {
                    "type": "string"
                },
                "execution_logs": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "started_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "database.TaskStatus": {
            "type": "string",
            "enum": [
                "todo",
                "in_progress",
                "done",
                "cancelled"
            ],
            "x-enum-varnames": [
                "TaskStatusTodo",
                "TaskStatusInProgress",
                "TaskStatusDone",
                "TaskStatusCancelled"
            ]
        },
        "handlers.AddAdminToEnvironmentRequest": {
            "description": "Add admin to environment request",
            "type": "object",
            "required": [
                "admin_id"
            ],
            "properties": {
                "admin_id": {
                    "type": "integer"
                }
            }
        },
        "handlers.AddCredentialAdminRequest": {
            "description": "Request parameters for adding admin to credential",
            "type": "object",
            "required": [
                "admin_id"
            ],
            "properties": {
                "admin_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "handlers.BatchUpdateConfigsRequest": {
            "type": "object",
            "required": [
                "configs"
            ],
            "properties": {
                "configs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.ConfigUpdateItem"
                    }
                }
            }
        },
        "handlers.BatchUpdateTaskStatusRequest": {
            "description": "Batch update task status request",
            "type": "object",
            "required": [
                "status",
                "task_ids"
            ],
            "properties": {
                "status": {
                    "type": "string",
                    "enum": [
                        "todo",
                        "in_progress",
                        "done",
                        "cancelled"
                    ],
                    "example": "done"
                },
                "task_ids": {
                    "type": "array",
                    "maxItems": 100,
                    "minItems": 1,
                    "items": {
                        "type": "integer"
                    },
                    "example": [
                        1,
                        2,
                        3
                    ]
                }
            }
        },
        "handlers.BatchUpdateTaskStatusResponse": {
            "description": "Batch update task status response",
            "type": "object",
            "properties": {
                "failed_count": {
                    "type": "integer",
                    "example": 1
                },
                "failed_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "example": [
                        3
                    ]
                },
                "success_count": {
                    "type": "integer",
                    "example": 2
                },
                "success_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "example": [
                        1,
                        2
                    ]
                }
            }
        },
        "handlers.ConfigUpdateItem": {
            "type": "object",
            "required": [
                "config_key",
                "config_value"
            ],
            "properties": {
                "config_key": {
                    "type": "string"
                },
                "config_value": {
                    "type": "string"
                }
            }
        },
        "handlers.CreateConversationRequest": {
            "type": "object"
        },
        "handlers.CreateCredentialRequest": {
            "description": "Request parameters for creating Git credentials",
            "type": "object",
            "required": [
                "name",
                "secret_data",
                "type"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Credential for GitHub projects"
                },
                "name": {
                    "type": "string",
                    "example": "My GitHub Credential"
                },
                "secret_data": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "example": {
                        "{\"password\"": "\"mypassword\"}"
                    }
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "password",
                        "token",
                        "ssh_key"
                    ],
                    "example": "password"
                },
                "username": {
                    "type": "string",
                    "example": "myusername"
                }
            }
        },
        "handlers.CreateEnvironmentRequest": {
            "description": "Create environment request",
            "type": "object",
            "required": [
                "docker_image",
                "name",
                "type"
            ],
            "properties": {
                "cpu_limit": {
                    "type": "number",
                    "maximum": 16,
                    "minimum": 0.1
                },
                "description": {
                    "type": "string"
                },
                "docker_image": {
                    "type": "string"
                },
                "env_vars": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "memory_limit": {
                    "type": "integer",
                    "maximum": 32768,
                    "minimum": 128
                },
                "name": {
                    "type": "string"
                },
                "system_prompt": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "handlers.CreateProjectRequest": {
            "description": "Create project request",
            "type": "object",
            "required": [
                "name",
                "protocol",
                "repo_url"
            ],
            "properties": {
                "credential_id": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string",
                    "enum": [
                        "https",
                        "ssh"
                    ]
                },
                "repo_url": {
                    "type": "string"
                },
                "system_prompt": {
                    "type": "string"
                }
            }
        },
        "handlers.CreateTaskRequest": {
            "type": "object"
        },
        "handlers.CreateTaskResponse": {
            "description": "Create task response",
            "type": "object",
            "properties": {
                "branch_error": {
                    "type": "string",
                    "example": "Failed to fetch branches"
                },
                "project_branches": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "main",
                        "develop",
                        "feature/user-auth"
                    ]
                },
                "task": {
                    "$ref": "#/definitions/database.Task"
                }
            }
        },
        "handlers.EnvironmentAdminsResponse": {
            "description": "Environment admins response",
            "type": "object",
            "properties": {
                "admins": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.AdminListResponse"
                    }
                }
            }
        },
        "handlers.FetchRepositoryBranchesRequest": {
            "description": "Request parameters for fetching Git repository branch list",
            "type": "object",
            "required": [
                "repo_url"
            ],
            "properties": {
                "credential_id": {
                    "type": "integer",
                    "example": 1
                },
                "repo_url": {
                    "type": "string",
                    "example": "https://github.com/user/repo.git"
                }
            }
        },
        "handlers.FetchRepositoryBranchesResponse": {
            "description": "Response for fetching Git repository branch list",
            "type": "object",
            "properties": {
                "branches": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[\"main\"",
                        "\"develop\"",
                        "\"feature-1\"]"
                    ]
                },
                "can_access": {
                    "type": "boolean",
                    "example": true
                },
                "error_message": {
                    "type": "string",
                    "example": ""
                }
            }
        },
        "handlers.GetKanbanTasksResponse": {
            "description": "Get kanban tasks response",
            "type": "object",
            "properties": {
                "cancelled": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.Task"
                    }
                },
                "done": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.Task"
                    }
                },
                "in_progress": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.Task"
                    }
                },
                "todo": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.Task"
                    }
                }
            }
        },
        "handlers.ParseRepositoryURLRequest": {
            "description": "Parse repository URL request",
            "type": "object",
            "required": [
                "repo_url"
            ],
            "properties": {
                "repo_url": {
                    "type": "string",
                    "example": "https://github.com/user/repo.git"
                }
            }
        },
        "handlers.ParseRepositoryURLResponse": {
            "description": "Parse repository URL response",
            "type": "object",
            "properties": {
                "host": {
                    "type": "string",
                    "example": "github.com"
                },
                "is_valid": {
                    "type": "boolean",
                    "example": true
                },
                "owner": {
                    "type": "string",
                    "example": "user"
                },
                "protocol": {
                    "type": "string",
                    "example": "https"
                },
                "repo": {
                    "type": "string",
                    "example": "repo"
                }
            }
        },
        "handlers.UpdateConversationRequest": {
            "description": "Update conversation request",
            "type": "object",
            "properties": {
                "content": {
                    "type": "string",
                    "example": "Updated conversation content"
                }
            }
        },
        "handlers.UpdateCredentialRequest": {
            "description": "Request parameters for updating Git credentials",
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Updated description"
                },
                "name": {
                    "type": "string",
                    "example": "Updated credential name"
                },
                "secret_data": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "example": {
                        "{\"password\"": "\"newpassword\"}"
                    }
                },
                "username": {
                    "type": "string",
                    "example": "newusername"
                }
            }
        },
        "handlers.UpdateEnvironmentRequest": {
            "description": "Update environment request",
            "type": "object",
            "properties": {
                "cpu_limit": {
                    "type": "number"
                },
                "description": {
                    "type": "string"
                },
                "env_vars": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "memory_limit": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "system_prompt": {
                    "type": "string"
                }
            }
        },
        "handlers.UpdateProjectRequest": {
            "description": "Update project request",
            "type": "object",
            "properties": {
                "credential_id": {
                    "type": "integer",
                    "example": 1
                },
                "description": {
                    "type": "string",
                    "example": "Updated project description"
                },
                "name": {
                    "type": "string",
                    "example": "Updated project name"
                },
                "repo_url": {
                    "type": "string",
                    "example": "https://github.com/user/repo.git"
                },
                "system_prompt": {
                    "type": "string",
                    "example": "Custom system prompt"
                }
            }
        },
        "handlers.UpdateTaskRequest": {
            "description": "Update task request",
            "type": "object",
            "required": [
                "title"
            ],
            "properties": {
                "title": {
                    "type": "string",
                    "example": "Updated task title"
                }
            }
        },
        "handlers.UpdateTaskStatusRequest": {
            "description": "Update task status request",
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "type": "string",
                    "enum": [
                        "todo",
                        "in_progress",
                        "done",
                        "cancelled"
                    ],
                    "example": "in_progress"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "XSHA Backend API",
	Description:      "XSHA Backend API service, providing user authentication, project management, Git credential management and other functions",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
